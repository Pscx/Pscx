//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pscx.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Pscx.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compressing &apos;{0}&apos; ....
        /// </summary>
        internal static string ArchiveCompressing {
            get {
                return ResourceManager.GetString("ArchiveCompressing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} already exists in archive; conflicts with &apos;{1}&apos;, skipping..
        /// </summary>
        internal static string ArchiveConflictingFile {
            get {
                return ResourceManager.GetString("ArchiveConflictingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination archive &apos;{0}&apos;..
        /// </summary>
        internal static string ArchiveDestination {
            get {
                return ResourceManager.GetString("ArchiveDestination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archive &apos;{0}&apos; exists and -NoClobber specified; aborting..
        /// </summary>
        internal static string ArchiveNoClobberOutput {
            get {
                return ResourceManager.GetString("ArchiveNoClobberOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} already exists and -NoClobber specified; skipping file..
        /// </summary>
        internal static string ArchiveOutputAlreadyExists {
            get {
                return ResourceManager.GetString("ArchiveOutputAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Appending missing {0} extension to OutputPath..
        /// </summary>
        internal static string ArchiveOutputPathMissingExtension {
            get {
                return ResourceManager.GetString("ArchiveOutputPathMissingExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OutputPath should represent a file, not a directory..
        /// </summary>
        internal static string ArchiveOutputPathShouldBeFile {
            get {
                return ResourceManager.GetString("ArchiveOutputPathShouldBeFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} of {1} bytes compressed..
        /// </summary>
        internal static string ArchiveProgress {
            get {
                return ResourceManager.GetString("ArchiveProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Building the downloaded assemblies cache index..
        /// </summary>
        internal static string AssemblyCacheDownloadLoading {
            get {
                return ResourceManager.GetString("AssemblyCacheDownloadLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global Assembly Cache.
        /// </summary>
        internal static string AssemblyCacheGacDriveDescription {
            get {
                return ResourceManager.GetString("AssemblyCacheGacDriveDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Building the global assembly cache index..
        /// </summary>
        internal static string AssemblyCacheGacLoading {
            get {
                return ResourceManager.GetString("AssemblyCacheGacLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation will attempt to load every assembly in the GAC. Are you sure you want to do this?.
        /// </summary>
        internal static string AssemblyCacheLoadEntireGac {
            get {
                return ResourceManager.GetString("AssemblyCacheLoadEntireGac", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Building the NGen cache index..
        /// </summary>
        internal static string AssemblyCacheNGenLoading {
            get {
                return ResourceManager.GetString("AssemblyCacheNGenLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0} Clipboard owner: {1}:{2}&quot;,.
        /// </summary>
        internal static string ClipboardExceptionFormat {
            get {
                return ResourceManager.GetString("ClipboardExceptionFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completed.
        /// </summary>
        internal static string Completed {
            get {
                return ResourceManager.GetString("Completed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following expression will be invoked in order to get tab expansions:
        ///{0}
        ///Press [Tab] to continue or any other key to cancel..
        /// </summary>
        internal static string ConfirmExpressionInvocation {
            get {
                return ResourceManager.GetString("ConfirmExpressionInvocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string GetExportedTypes {
            get {
                return ResourceManager.GetString("GetExportedTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipping {0}. It is not under the entry path root {1}..
        /// </summary>
        internal static string InputFileOutsideOfRoot {
            get {
                return ResourceManager.GetString("InputFileOutsideOfRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A profile script already exists at:
        ///
        ///{0}
        ///
        ///Would you like to overwrite it?  
        ///
        ///If you choose to overwrite it a backup copy will be made. .
        /// </summary>
        internal static string OverwriteExistingProfile {
            get {
                return ResourceManager.GetString("OverwriteExistingProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     Reply from {0} bytes={1} time={2}ms TTL={3}.
        /// </summary>
        internal static string PingHostInfo {
            get {
                return ResourceManager.GetString("PingHostInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pinging {0} with {1} bytes of data:.
        /// </summary>
        internal static string PingHostInfoGroup {
            get {
                return ResourceManager.GetString("PingHostInfoGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration of a previous version of PSCX has been detected in the profile script:
        ///
        ///{0}
        ///
        ///After installation has completed, please remove the lines associated with the old version of PSCX from the profile script..
        /// </summary>
        internal static string ProfileOldPscxConfigNotRemoved {
            get {
                return ResourceManager.GetString("ProfileOldPscxConfigNotRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resize would result into a bitmap with zero width or height..
        /// </summary>
        internal static string ResizeBitmapZeroDimension {
            get {
                return ResourceManager.GetString("ResizeBitmapZeroDimension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PowerShell Community Extensions Settings.
        /// </summary>
        internal static string SettingsDriveDescription {
            get {
                return ResourceManager.GetString("SettingsDriveDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified attachment paths could not be resolved to a provider path.  Consider using the -AttachmentLiteralPaths parameter..
        /// </summary>
        internal static string SmtpAttachmentNotFound {
            get {
                return ResourceManager.GetString("SmtpAttachmentNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send-SmtpMail will be deprecated in the next major version of PSCX.  Please convert usage of this cmdlet over to PowerShell&apos;s built-in Send-MailMessage cmdlet..
        /// </summary>
        internal static string SmtpMailDeprecationWarning {
            get {
                return ResourceManager.GetString("SmtpMailDeprecationWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SMTP mail message sent..
        /// </summary>
        internal static string SmtpMailSent {
            get {
                return ResourceManager.GetString("SmtpMailSent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} using from address {1}.
        /// </summary>
        internal static string SmtpUsingFrom_F2 {
            get {
                return ResourceManager.GetString("SmtpUsingFrom_F2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} using SMTP host {1}.
        /// </summary>
        internal static string SmtpUsingHost_F2 {
            get {
                return ResourceManager.GetString("SmtpUsingHost_F2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} using SMTP port {1}.
        /// </summary>
        internal static string SmtpUsingPort_F2 {
            get {
                return ResourceManager.GetString("SmtpUsingPort_F2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PowerShell Community Extensions (PSCX) base snapin which implements a general purpose set of cmdlets..
        /// </summary>
        internal static string SnapinDescription {
            get {
                return ResourceManager.GetString("SnapinDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PowerShell Community Extensions.
        /// </summary>
        internal static string SnapinName {
            get {
                return ResourceManager.GetString("SnapinName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PowerShell Community Developers.
        /// </summary>
        internal static string SnapinVendor {
            get {
                return ResourceManager.GetString("SnapinVendor", resourceCulture);
            }
        }
    }
}
