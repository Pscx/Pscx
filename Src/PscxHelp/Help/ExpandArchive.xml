<?xml version='1.0' ?>
<Cmdlet FullName='Pscx.Commands.IO.Compression.ExpandArchiveCommand'>
  <Description>Expands a compressed archive file, or ArchiveEntry object, to its constituent file(s).</Description>
  <DetailedDescription>Expands a compressed archive file, or ArchiveEntry object, to its constituent file(s).</DetailedDescription>
  <Parameters>
    <Parameter Name='Index'>
      <Description>The index, or indices, of the file(s) inside the archive to expand. For multiple indices, use array syntax (comma-separated).</Description>
      <DefaultValue></DefaultValue>
    </Parameter>
    <Parameter Name='EntryPath'>
      <Description>The relative path of the file or file(s) inside the archive to expand. For multiple files, use array syntax (comma-separated).</Description>
      <DefaultValue></DefaultValue>
    </Parameter>
    <Parameter Name='OutputPath'>
      <Description>The path to place the expanded file(s). This path must lie on the FileSystem provider.</Description>
      <DefaultValue>The current location of the FileSystem provider.</DefaultValue>
    </Parameter>
    <Parameter Name='Password'>
      <Description>A password to decrypt encrypted entries in the archive, if required.</Description>
      <DefaultValue>Not Set</DefaultValue>
    </Parameter>
    <Parameter Name='FlattenPaths'>
      <Description>Store all files in the archives in the root. If multiple files have the same name, the last file in, wins.</Description>
      <DefaultValue></DefaultValue>
    </Parameter>
    <Parameter Name='IgnoreCase'>
      <Description>Ignore the case of the EntryPath specificiation when matching file(s) to expand.</Description>
      <DefaultValue></DefaultValue>
    </Parameter>
    <Parameter Name='PassThru'>
      <Description>Output a FileInfo or DirectoryInfo for each file or directory expanded, respectively.</Description>
      <DefaultValue></DefaultValue>
    </Parameter>
    <Parameter Name='ShowProgress'>
      <Description>Show the PowerShell progress bar while performing expansion and scanning operations.</Description>
      <DefaultValue></DefaultValue>
    </Parameter>
    <Parameter Name='Path'>
      <Description>Specifies the path to the file to process. Wildcard syntax is allowed.</Description>
      <DefaultValue></DefaultValue>
    </Parameter>
    <Parameter Name='InputObject'>
      <Description>Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.</Description>
      <DefaultValue></DefaultValue>
    </Parameter>
    <Parameter Name='LiteralPath'>
      <Description>Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</Description>
      <DefaultValue></DefaultValue>
    </Parameter>
  </Parameters>

  <InputTypes>
    <InputType>
      <Name>System.IO.FileInfo</Name>
      <Description>
        <p>An archive file from the filesystem, e.g. logs.zip.</p>
      </Description>
    </InputType>
    <InputType>
      <Name>Pscx.IO.Compression.ArchiveEntry</Name>
      <Description>
        <p>An object emitted from the Read-Archive cmdlet.</p>
      </Description>
    </InputType>
  </InputTypes>

  <ReturnTypes>
    <ReturnType>
      <Name>System.IO.FileSystemInfo</Name>
      <Description>
        <p>If -Passthru is specified, one ore more FileSystemInfo object(s) (FileInfo/DirectoryInfo) may be returned.</p>
      </Description>
    </ReturnType>
  </ReturnTypes>

  <Examples>
    <Example Number="1">
      <Code>Expand-Archive -Path *.zip -OutputPath .\Temp\ -ShowProgress</Code>
      <Remarks>
        <p>Expand all zip files in the current directory to .\temp while showing a progress bar.</p>
      </Remarks>
    </Example>
    <Example Number="2">
      <Code>Expand-Archive -Path setup.exe -EntryPath en-us\readme.htm</Code>
      <Remarks>
        <p>Search a self-expanding zip file named setup.exe in the current directory for a file named "readme.htm" in a subdirectory named "en-us," and expand it to the current directory.</p>
      </Remarks>
    </Example>
    <Example Number="3">
      <Code>Read-Archive *.iso | where { $_.size -gt 1mb } | Expand-Archive</Code>
      <Remarks>
        <p>Scan through all ISOs in the current directory and expand any files bigger than 1MB to the current directory.</p>
      </Remarks>
    </Example>
    <Example Number="4">
      <Code>dir x:\ISOs -rec -inc *.iso | Read-Archive | where {$_.path -eq "setup.exe"} | extract-archive -path {$_.archivepath} -index (0..19)</Code>
      <Remarks>
        <p>Look through all files under x:\ISOs for ISOs that contain a setup.exe in the root, and if so, expand the first twenty files of that ISO to the current directory.</p>
      </Remarks>
    </Example>
  </Examples>

  <Notes>
    <Note>
      <p>Supported formats are: SevenZip, Arj, BZip2, Cab, Chm, Compound, Cpio, Deb, GZip, Iso, Lzh, Lzma, Nsis, Rar, Rpm, Split, Tar, Wim, Z, Zip.</p>
    </Note>
  </Notes>

</Cmdlet>
